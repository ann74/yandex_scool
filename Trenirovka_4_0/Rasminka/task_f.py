# Лифт.
# Тридцатого декабря все сотрудники известной IT-компании отправляются праздновать Новый год! На парковке
# офиса сотрудников уже ожидают автобусы, чтобы отвезти их в ресторан. Известно, что на i-м этаже работает
# ai сотрудников, а парковка расположена на нулевом этаже. Изначально лифт расположен на этаже с парковкой.
# Какое минимальное количество времени лифт будет перевозить всех людей на парковку? Известно, что лифт
# движется со скоростью один этаж в секунду, а посадка и высадка происходит мгновенно.
# Формат ввода
# В первой строке дано единственное целое число k(1≤k≤109)  — количество людей, которое вмещает лифт за одну
# поездку. Во второй строке дано единственное целое число n  — количество этажей в здании. В следующих
# n(1≤n≤105) строках дано по одному целому неотрицательному числу ai(0≤ai≤109), которое обозначает количество
# сотрудников на этаже номер i.
# Формат вывода
# Выведите единственное целое число  — минимальное количество секунд, которое необходимо, чтобы все
# сотрудники оказались на парковке.
# Пример
# Ввод	Вывод
# 2       8
# 3
# 3
# 0
# 1

k = int(input())
n = int(input())
a = [0] * (n + 1)
for i in range(1, n + 1):
    a[i] = int(input())
dp_vacant = [0] * (n + 1)
dp_count = [0] * (n + 1)
if a[n] % k:
    dp_vacant[n] = k - a[n] % k
dp_count[n] = a[n] // k + bool(a[n] % k)
for i in range(n - 1, 0, -1):
    if a[i] == 0:
        dp_vacant[i] = dp_vacant[i + 1]
    elif a[i] < dp_vacant[i + 1]:
        dp_vacant[i] = dp_vacant[i + 1] - a[i]
    elif a[i] > dp_vacant[i + 1]:
        a[i] = a[i] - dp_vacant[i + 1]
        if a[i] % k:
            dp_vacant[i] = k - a[i] % k
        dp_count[i] = a[i] // k + bool(a[i] % k)
res = 0
for j in range(n + 1):
    res += j * 2 * dp_count[j]
print(res)
