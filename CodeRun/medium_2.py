# 2. Самый дешевый путь
# В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней
# клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх
# перемещаться запрещено). При проходе через клетку с игрока берут столько килограммов еды, какое число записано
# в этой клетке (еду берут также за первую и последнюю клетки его пути).
# Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.
# Формат ввода
# Вводятся два числа N и M — размеры таблицы (1≤N≤20, 1≤M≤20). Затем идет N строк по M чисел в каждой — размеры
# штрафов в килограммах за прохождение через соответствующие клетки (числа от 0 до 100).
# Формат вывода
# Выведите минимальный вес еды в килограммах, отдав которую можно попасть в правый нижний угол.
# Пример 1
# Ввод                  Вывод
# 5 5                   11
# 1 1 1 1 1
# 3 100 100 100 100
# 1 1 1 1 1
# 2 2 2 2 1
# 1 1 1 1 1


import sys


def main():
    n, m = map(int, input().split())
    table = [[0] * (m + 1) for _ in range(n + 1)]
    for j in range(2, m + 1):
        table[0][j] = 50000
    for i in range(2, n + 1):
        table[i][0] = 50000
    for i in range(1, n + 1):
        row = list(map(int, input().split()))
        for j in range(m):
            table[i][j + 1] = row[j]

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            table[i][j] = table[i][j] + min(table[i - 1][j], table[i][j - 1])

    print(table[n][m])


if __name__ == '__main__':
    main()