# D. Жребий Крижановского
# Петя играет с друзьями в игру, которую иногда называют "Жребий Крижановского". Правила игры следующие:
# в каждом туре каждый игрок загадывает произвольное натуральное число. После этого игрок, загадавший
# минимальное число, которое не повторяется, выигрывает в этом туре, причем его выигрыш равен этому числу.
# Например, если играют 6 человек и были загаданы числа 3, 2, 1, 1, 4 и 2, то выиграл первый игрок, причем
# его выигрыш равен 3. Если все загаданные числа повторяются, то тур считается ничейным и никто баллов не получает.
# Общий выигрыш игрока за игру равен сумме баллов за все сыгранные туры.
# Петя с друзьями при игре просто называют по очереди загаданные ими числа, а потом определяют, кто выиграл,
# и подсчитывают баллы. Однако при таком формате игры в принципе можно сжульничать, не загадывая число заранее,
# а, уже зная числа, названные предыдущими игроками, выбрать себе оптимальное "загаданное" число. Этим и
# пользуется Петя. Он называет число последним и старается выбрать число так, чтобы максимизировать свой выигрыш.
# Идет последний тур игры. Известны очки всех игроков перед этим туром и названные игроками числа. Выясните,
# какое число следует назвать Пете, чтобы по результатам игры у как можно большего числа игроков количество
# баллов было меньше, чем у него. Если таких чисел несколько, то Петя хочет назвать минимальное возможное.
# Формат ввода
# В первой строке вводится число n - количество игроков (2 <= n <= 100). Вторая строка содержит n чисел -
# баллы игроков перед последним туром (неотрицательные целые числа, не большие 100). Баллы перечислены в том
# порядке, в котором игроки обычно называют числа (то есть Петины баллы указаны последними). В третьей строке
# задано (n-1) число - числа, названные игроками в последнем туре (числа не превышают 100), в том порядке,
# в котором они их называли.
# Формат вывода
# Выведите число, которое следует назвать Пете.
# Пример 1
# Ввод	        Вывод
# 6               1
# 0 0 0 0 0 0
# 2 3 4 5 6


n = int(input())
scores = list(map(int, input().split()))
numbers = list(map(int, input().split()))
num_dict = {}
for i in range(n - 1):
    num = numbers[i]
    num_dict[num] = num_dict.get(num, list())
    num_dict[num].append(i)
best_res = -1
best_num = -1
for num_pet in range(1, 102):
    win = 0
    num_dict[num_pet] = num_dict.get(num_pet, [])
    num_dict[num_pet].append(n - 1)
    for key in sorted(num_dict.keys()):
        if len(num_dict[key]) == 1:
            scores[num_dict[key][0]] += key
            win = key
            break
    score_pet = scores[-1]
    temp_res = len(list(filter(lambda x: x < score_pet, scores)))
    if temp_res > best_res:
        best_res = temp_res
        best_num = num_pet
    if win:
        scores[num_dict[win][0]] -= win
    num_dict[num_pet].remove(n - 1)
print(best_num)
