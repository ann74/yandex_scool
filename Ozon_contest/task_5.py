# Компрессия данных(англ.data compression) — алгоритмическое(обычно обратимое) преобразование данных, производимое
# с целью уменьшения занимаемого ими объёма. Вам предстоит реализовать простейший алгоритм компрессии последовательности
# чисел, который предполагает, что последовательность состоит из подряд идущих возрастающих или убывающих отрезков чисел.
# Формально, будем представлять результат компрессии как новую последовательность чётной длины вида b1, c1, b2, c2, ...,
# bk, ck, где пара идущих bi, ci подряд членов означает, что:,если ci > 0, что в искомой последовательности был
# возрастающий отрезок вида bi, bi+1, bi+2, ..., bi+ci; если ci < 0, что в искомой последовательности был убывающий
# отрезок вида bi, bi-1, bi-2, ..., bi-|ci|. Например, если искомая последовательность
# имела вид a = [3, 2, 1, 0,−1, 0, 6, 6, 7], то результат сжатия может иметь вид [3,−3,−1, 1, 6, 0, 6, 1] .Другой
# возможный результат сжатия: [3,−4, 0, 0, 6, 0, 6, 1]. По заданной последовательности a выведите такой результат
# сжатия, который имеет наименьшую длину(последовательность - результат содержит минимальное количество элементов).
# Если такое сжатие неоднозначно, то выведите любое из них.
# Пример теста 1
# Входные данные
# 5
# 9
# 3 2 1 0 -1 0 6 6 7
# 1
# 1000
# 7
# 1 2 3 4 5 6 7
# 7
# 1 3 5 7 9 11 13
# 11
# 100 101 102 103 19 20 21 22 42 41 40
# Выходные данные
# 8
# 3 -4 0 0 6 0 6 1
# 2
# 1000 0
# 2
# 1 6
# 14
# 1 0 3 0 5 0 7 0 9 0 11 0 13 0
# 6
# 100 3 19 3 42 -2

n = int(input())
for _ in range(n):
    k = int(input())
    a = [int(x) for x in input().split()]
    res = []
    left, right = 0, 1
    flag_order = False
    while right < k:
        if abs(a[right] - a[right - 1]) == 1 and not flag_order:
            flag_order = True
            order = a[right] - a[right - 1]
            right += 1
        elif flag_order and a[right] - a[right - 1] == order:
            right += 1
        else:
            flag_order = False
            res.append(a[left])
            res.append(a[right - 1] - a[left])
            left = right
            right += 1
    res.append(a[left])
    res.append(a[right - 1] - a[left])
    print(len(res))
    print(*res)
